<<<<<<< HEAD
shiny::runApp('E:/School/INFO478/a2-taingmat/disease-modeling')
runApp('E:/School/INFO478/a2-taingmat/disease-modeling')
runApp('E:/School/INFO478/a2-taingmat/disease-modeling')
shiny::runApp('E:/School/INFO478/a2-taingmat/disease-modeling')
runApp('E:/School/INFO478/a2-taingmat/disease-modeling')
runApp('E:/School/INFO478/a2-taingmat/disease-modeling')
runApp('E:/School/INFO478/a2-taingmat/disease-modeling')
runApp('E:/School/INFO478/a2-taingmat/disease-modeling')
# --- Low Birth Weight ---
# Load in Data
birth_weights = birthwt
library("dplyr")
library("ggplot2")
library("HSAUR")
library("MASS")
library("Epi")
# --- Tuberculosis ---
# Load in BCG Data
data("BCG", package = "HSAUR")
# Calculate the Odds Ratio for each study
BCG <- BCG %>%
mutate(odds_ratio = (BCGTB / (BCGTB + NoVaccTB)) / (BCGVacc / (BCGVacc + NoVacc)))
# Create historgram
BCG_odds_hist <- ggplot(BCG, aes(x = odds_ratio)) +
geom_histogram() +
ggtitle("BCG Odds Ratio Distribution") +
xlab("odds ratio") +
ylab("Count")
BCG_odds_hist
#Plotting Relationshop with latitude + year
BCG_lat <- ggplot(BCG, aes(x = Latitude, y = odds_ratio)) +
geom_line()
BCG_lat
BCG_year <- ggplot(BCG, aes(x = Year, y = odds_ratio)) +
geom_line()
BCG_year
#Calculate Relative Risks
BCG <- BCG %>%
mutate(relative_risk = (BCGTB / (BCGVacc)) / (NoVaccTB / (NoVacc)))
#Odds Ratio vs Relative Risk Scatter Plot
BCG_risk_odds <- ggplot(BCG, aes(x = odds_ratio, y = relative_risk)) +
geom_point()
BCG_risk_odds
# --- Low Birth Weight ---
# Load in Data
birth_weights = birthwt
birth_weights["smoke"]
sum(birth_weights["smoke"])
mean(birth_weights["smoke"])
sum(birth_weights["smoke"])
sum(birth_weights["bwt"])
mean(birth_weights["bwt"])
birth_weights["bwt"]
birth_weights[["bwt"]]
mean(birth_weights[["bwt"]])
mean_birth_wt <- mean(birth_weights[["bwt"]])
# Calculate Summary Statistics
prop_low_birth <- sum(birth_weights["low"]) / nrow(birth_weights)
prop_smoker <- sum(birth_weights["smoke"]) / nrow(birth_weights)
mean_birth_wt <- mean(birth_weights[["bwt"]])
a <- birth_weights %>% filter(smoke == 0)
View(a)
a <- birth_weights %>% filter(smoke == 0, low = TRUE)
a <- birth_weights %>% filter(smoke == 0, low == TRUE)
# Relative risk function
relative_risk <- function(df, predictor, binary) {
# Find risk ratio given exposure
exposed_true <- df %>% filter(predictor == binary, low == TRUE)
exposed_total <- df %>% filter(predictor == binary)
risk_given_exposure <- nrow(exposed_true) / nrow(exposed_total)
#Find risk ratio without expsoure
unexposed_true <- df %>% filter(predictor == -binary, low == TRUE)
unexposed_total <- df %>% filter(predictor == -binary)
risk_without_exposure <- nrow(unexposed_true) / nrow(unexposed_total)
return(risk_given_exposure / risk_without_exposure)
=======
geom_point(mapping = aes(x = Study, y = odds_ratio_bcg)) +
coord_flip()
or_graph
or_graph <- ggplot(BCG) +
geom_bar(mapping = aes(x = Study, y = odds_ratio_bcg)) +
coord_flip()
or_graph
or_graph <- ggplot(BCG) +
geom_histogram(mapping = aes(x = Study, y = odds_ratio_bcg)) +
coord_flip()
or_graph
or_graph <- ggplot(BCG) +
geom_vline(mapping = aes(x = Study, y = odds_ratio_bcg))
or_graph
or_table <- BCG %>%
select(Study, odds_ratio_bcg) %>%
summarise(BCG, mean_run =mean(odds_ratio_bcg))
or_table <- BCG %>%
select(Study, odds_ratio_bcg) %>%
summarise(odds_ratio_bcg, mean_run =mean(odds_ratio_bcg))
BCG$rr_bcg <- (BCG$BCGTB / BCG$BCGVacc) / (BCG$NoVaccTB / BCG$NoVacc)
yr_bcg <- BCG %>%
arrange(-Year)
View(yr_bcg)
yr_bcg <- BCG %>%
arrange(Year)
install.packages('MASS')
library('MASS')
data("birthwt", package = "MASS")
install.packages('Epi')
data("birthwt")
force(birthwt)
library('Epi')
data("bdendo", package = "Epi")
or_table <- BCG %>%
select(Study, odds_ratio_bcg)
or_table <- BCG %>%
select(BCG, Study, odds_ratio_bcg)
or_table <- BCG %>%
filter(Study, odds_ratio_bcg)
View(or_table)
or_table <- BCG %>%
select(Study, odds_ratio_bcg)
or_table <- BCG %>%
select(., Study, odds_ratio_bcg)
yr_or_graph <- ggplot(yr_bcg, aes(x = Year, y = odds_ratio_bcg))+
geom_histogram()
yr_or_graph
yr_or_graph <- ggplot(yr_bcg, aes(x = Year, y = odds_ratio_bcg))+
geom_col()
yr_or_graph
yr_or_graph <- ggplot(yr_bcg, aes(x = Year, y = odds_ratio_bcg))+
geom_col()+
coord_flip()
yr_or_graph
lat_bcg <- BCG %>%
arrange(Latitude)
lat_or_graph <- ggplot(lat_bcg, aes(x = Latitude, y = odds_ratio_bcg))+
geom_col()
lat_or_graph
lat_or_graph <- ggplot(lat_bcg, aes(x = Latitude, y = odds_ratio_bcg))+
geom_col()+
coord_flip()
or_table <- BCG %>%
select(Study, odds_ratio_bcg, Year)
require(MASS)
require(dplyr)
or_table <- BCG %>%
select(Study, odds_ratio_bcg, Year)
require(MASS)
require(dplyr)
or_table <- BCG %>%
select(Study, odds_ratio_bcg, Year)
require(MASS)
require(dplyr)
or_table <- BCG %>%
dplyr::select(Study, odds_ratio_bcg, Year)
View(or_table)
require(MASS)
require(dplyr)
or_table <- BCG %>%
dplyr::select(Study, odds_ratio_bcg)
View(birthwt)
or_graph <- ggplot(BCG, aes(x = Study, y = odds_ratio_bcg))
rr_or_graph <- or_graph + ggplot(aes(y = rr_bcg)) +
geom_point() +
geom_smooth()
or_graph <- ggplot(BCG, aes(x = Study, y = odds_ratio_bcg))
rr_or_graph <- or_graph + ggplot(aes(x = Study, y = rr_bcg)) +
geom_point() +
geom_smooth()
or_graph <- ggplot(BCG, aes(x = Study, y = odds_ratio_bcg))
rr_or_graph <- or_graph + ggplot(aes(x = Study, y = rr_bcg)) +
geom_col() +
geom_smooth()
rr_or_graph <- ggplot(aes(x = Study)) +
geom_col(aes(y = odds_ratio_bcg)) +
geom_col(aes(y = rr_bcg))
rr_or_graph <- ggplot(aes(x = Study)) +
geom_col(aes(y = odds_ratio_bcg))
rr_or_graph <- ggplot(BCG, aes(x = Study)) +
geom_col(aes(y = odds_ratio_bcg)) +
geom_col(aes(y = rr_bcg))
rr_or_graph
view(or_table)
rr_or_graph <- ggplot(BCG, aes(x = Study)) +
geom_point(aes(y = odds_ratio_bcg)) +
geom_point(aes(y = rr_bcg)) +
scale_y_continuous(
name = "Odds ratio of BCG",
sec_axis = sec_axis(~., name="Price ($)")
)+
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph <- ggplot(BCG, aes(x = Study)) +
geom_point(aes(y = odds_ratio_bcg)) +
geom_point(aes(y = rr_bcg))
rr_or_graph
rr_or_graph <- ggplot(BCG, aes(x = Study)) +
geom_point(aes(y = odds_ratio_bcg)) +
geom_point(aes(y = rr_bcg)) +
scale_y_continuous(
name = "Odds ratio of BCG",
sec_axis = sec_axis(name="Relative ratio of BCG")
)+
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph <- ggplot(BCG, aes(x = Study)) +
geom_point(aes(y = odds_ratio_bcg)) +
geom_point(aes(y = rr_bcg)) +
scale_y_continuous(
name = "Odds ratio of BCG",
sec_axis = dup_axis())
+
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph <- ggplot(BCG, aes(x = Study)) +
geom_point(aes(y = odds_ratio_bcg)) +
geom_point(aes(y = rr_bcg)) +
scale_y_continuous(
name = "Odds ratio of BCG",
sec_axis = dup_axis())
rr_or_graph <- ggplot(BCG, aes(x = Study)) +
geom_point(aes(y = odds_ratio_bcg)) +
geom_point(aes(y = rr_bcg)) +
ggplot::scale_y_continuous(
name = "Odds ratio of BCG",
sec_axis = dup_axis())+
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph <- ggplot(BCG, aes(x = Study)) +
geom_point(aes(y = odds_ratio_bcg)) +
geom_point(aes(y = rr_bcg)) +
ggplot2::scale_y_continuous(
name = "Odds ratio of BCG",
sec_axis = dup_axis())+
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph <- ggplot(BCG) +
geom_point(mapping = aes(x = Study, y = odds_ratio_bcg)) +
geom_point(mapping = aes(x = Study, y = rr_bcg)) +
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph
rr_or_graph <- ggplot(BCG) +
geom_bar(mapping = aes(x = Study, y = odds_ratio_bcg)) +
geom_bar(mapping = aes(x = Study, y = rr_bcg)) +
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph
rr_or_graph <- ggplot(BCG) +
geom_line(mapping = aes(x = Study, y = odds_ratio_bcg)) +
geom_line(mapping = aes(x = Study, y = rr_bcg)) +
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph <- ggplot(BCG) +
geom_line(mapping = aes(x = Study, y = odds_ratio_bcg)) +
geom_line(mapping = aes(x = Study, y = rr_bcg)) +
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph
rr_or_graph <- ggplot(BCG) +
geom_line(mapping = aes(x = Study, y = odds_ratio_bcg, color='darkblue')) +
geom_line(mapping = aes(x = Study, y = rr_bcg)) +
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph
rr_or_graph <- ggplot(BCG) +
geom_line(mapping = aes(x = Study, y = odds_ratio_bcg, color='Odds ratio')) +
geom_line(mapping = aes(x = Study, y = rr_bcg, color="Relative ratio")) +
ggtitle("Odd ratio versus Relative ratio of BCG")
rr_or_graph
rr_or_graph <- ggplot(BCG) +
geom_line(mapping = aes(x = Study, y = odds_ratio_bcg, color='Odds ratio')) +
geom_line(mapping = aes(x = Study, y = rr_bcg, color="Relative ratio")) +
ggtitle("Odd ratio versus Relative ratio of BCG")+
scale_y_continuous("Compare ratios")
rr_or_graph
birthwt$low_prop <- mean(birthwt == 1)
birthwt$low_prop <- mean(birthwt$low == 1)
summ_bw <- birthwt %>%
mean(birthwt$low == 1)
summ_bw <- birthwt %>%
summarise(mean(birthwt$low == 1))
View(summ_bw)
data("birthwt", package = "MASS")
summ_bw <- birthwt %>%
summarise(mean(birthwt$low == 1))
View(birthwt)
summ_bw <- birthwt %>%
summarise(mean(birthwt$low == 1),
mean(birthwt$smoke == 1),
mean(birthwt$age))
summ_bw <- birthwt %>%
summarise(mean(birthwt$low == 1),
mean(birthwt$smoke == 1),
mean(birthwt$age),
max(birthwt$race))
View(birthwt)
summ_bw <- birthwt %>%
summarise(mean(birthwt$low == 1),
mean(birthwt$smoke == 1),
mean(birthwt$age),
max(birthwt$race)) %>%
setNames(., c('low weight prop', 'smoke prop', 'age mean','max num race' ))
View(bdendo)
summ_bw <- birthwt %>%
summarise(mean(birthwt$low == 1),
mean(birthwt$smoke == 1),
mean(birthwt$age),
mean(birthwt$bwt),
mean(birthwt$ptl == 1),
mean(birthwt$ht ==1)) %>%
setNames(., c('low weight prop', 'smoke prop', 'age mean','birth weight mean', 'prop of previous premature labours',
'prop of history of hypertension'))
View(summ_bw)
rr_function <- function(exp_risk, exp_norisk, unex_risk, unex_norisk) {
relative_ratio <- (exp_risk / (exp_risk + exp_norisk)) / (unex_risk / (unex_risk + unex_norisk))
>>>>>>> 290c4dd56f9e5bb571157a46860bcd84e02c46de
}
relative_risk(birth_weights, "smoke", TRUE)
relative_risk(birth_weights, "smoke", TRUE)
relative_risk(birth_weights, "smoke", FALSE)
df = birth_weights
predictor = "smoke"
binary = TRUE
# Find risk ratio given exposure
exposed_true <- df %>% filter(predictor == binary, low == TRUE)
exposed_total <- df %>% filter(predictor == binary)
# Find risk ratio given exposure
exposed_true <- df %>% filter("smoke" == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% filter(smoke == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% filter(eval("smoke") == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% filter(eval("smoke") == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% filter(_"smoke" == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% filter(-"smoke" == binary, low == TRUE)
install.packages("epitools")
# --- Endometrial Cancer ---
#Load in data
data(bdendo)
odds <- epitab(bdendo, method = "odds-ratio", rev = "b", verbose = "true")
library("Epi")
library("epitools")
odds <- epitab(bdendo, method = "odds-ratio", rev = "b", verbose = "true")
odds <- epitab(bdendo, method = "oddsratio", rev = "b", verbose = "true")
odds <- epitab(bdendo, method = "oddsratio", rev = "b", verbose = "true")
odds <- epitab(bdendo, method = "oddsratio", verbose = "true")
r243 <- matrix(c(12,2,7,9), 2, 2)
dimnames(r243) <- list(Diarrhea = c("Yes", "No"),
"Antibody level" = c("Low", "High")
)
r243
r243b <- t(r243)
r243b
epitab(r243, rev = "b", verbose = TRUE)
epitab(r243, method="riskratio",rev = "b", verbose = TRUE)
epitab(matrix(c(41, 15, 28010, 19017),2,2)[2:1,],
method="rateratio", verbose = TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% dplyr::filter("smoke" == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% dplyr::filter(smoke == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% dplyr::filter(as.name("smoke") == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% dplyr::filter(eval(parse("smoke")) == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% dplyr::filter(get("smoke") == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% dplyr::filter(get("smoke") == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% dplyr::filter(get("smoke") == binary, low == TRUE)
# Relative risk function
relative_risk <- function(df, predictor, binary) {
# Find risk ratio given exposure
exposed_true <- df %>% filter(get(predictor) == binary, low == TRUE)
exposed_total <- df %>% filter(get(predictor) == binary)
risk_given_exposure <- nrow(exposed_true) / nrow(exposed_total)
#Find risk ratio without expsoure
unexposed_true <- df %>% filter(get(predictor) == -binary, low == TRUE)
unexposed_total <- df %>% filter(get(predictor) == -binary)
risk_without_exposure <- nrow(unexposed_true) / nrow(unexposed_total)
return(risk_given_exposure / risk_without_exposure)
}
relative_risk(birth_weights, "smoke", FALSE)
relative_risk(birth_weights, "smoke", FALSE)
relative_risk(birth_weights, "smoke", TRUE)
relative_risk(birth_weights, "smoke", TRUE)
relative_risk(birth_weights, "smoke", FALSE)
df = birth_weights
predictor = "smoke"
binary = TRUE
# Find risk ratio given exposure
exposed_true <- df %>% filter(get(predictor) == binary, low == TRUE)
# Find risk ratio given exposure
exposed_true <- df %>% filter(get(predictor) == binary, low == TRUE)
exposed_total <- df %>% filter(get(predictor) == binary)
risk_given_exposure <- nrow(exposed_true) / nrow(exposed_total)
#Find risk ratio without expsoure
unexposed_true <- df %>% filter(get(predictor) == -binary, low == TRUE)
unexposed_total <- df %>% filter(get(predictor) == -binary)
risk_without_exposure <- nrow(unexposed_true) / nrow(unexposed_total)
#Find risk ratio without expsoure
unexposed_true <- df %>% filter(get(predictor) == !binary, low == TRUE)
unexposed_total <- df %>% filter(get(predictor) == !binary)
risk_without_exposure <- nrow(unexposed_true) / nrow(unexposed_total)
return(risk_given_exposure / risk_without_exposure)
# Relative risk function
relative_risk <- function(df, predictor, binary) {
# Find risk ratio given exposure
exposed_true <- df %>% filter(get(predictor) == binary, low == TRUE)
exposed_total <- df %>% filter(get(predictor) == binary)
risk_given_exposure <- nrow(exposed_true) / nrow(exposed_total)
#Find risk ratio without expsoure
unexposed_true <- df %>% filter(get(predictor) == !binary, low == TRUE)
unexposed_total <- df %>% filter(get(predictor) == !binary)
risk_without_exposure <- nrow(unexposed_true) / nrow(unexposed_total)
return(risk_given_exposure / risk_without_exposure)
}
relative_risk(birth_weights, "smoke", TRUE)
relative_risk(birth_weights, "smoke", FALSE)
odds <- epitab(bdendo, method = "oddsratio", verbose = "true")
# Calculate Relative Risks
smoking_risk <- relative_risk(birth_weights, "smoke", TRUE)
hypertension_risk <- relative_risk(birth_weights, "ht", TRUE)
birth_weights <- birth_weights %>% mutate(test = ftv > 0)
birth_weights <- birth_weights %>% mutate(no_prenatal_care = (ftv == 0))
noprenatal_risk <- relative_risk(birth_weights, "no_prenatal_care", TRUE)
# Make boolean value for those below 20
birth_weights <- birth_weights %>% mutate(under_20 = (age < 20))
birth_pre_20_risk <- relative_risk(birth_weights, "", TRUE)
# Calculate Relative Risks
smoking_risk <- relative_risk(birth_weights, "smoke", TRUE)
hypertension_risk <- relative_risk(birth_weights, "ht", TRUE)
# Make boolean value for those who did not attend pre natal care
birth_weights <- birth_weights %>% mutate(no_prenatal_care = (ftv == 0))
noprenatal_risk <- relative_risk(birth_weights, "no_prenatal_care", TRUE)
# Make boolean value for those below 20
birth_weights <- birth_weights %>% mutate(under_20 = (age < 20))
birth_pre_20_risk <- relative_risk(birth_weights, "under_20", TRUE)
# Calculate Relative Risks
lb_smoking_risk <- relative_risk(birth_weights, "smoke", TRUE)
lb_hypertension_risk <- relative_risk(birth_weights, "ht", TRUE)
# Make boolean value for those who did not attend pre natal care
lb_birth_weights <- birth_weights %>% mutate(no_prenatal_care = (ftv == 0))
lb_noprenatal_risk <- relative_risk(birth_weights, "no_prenatal_care", TRUE)
# Make boolean value for those below 20
lb_birth_weights <- birth_weights %>% mutate(under_20 = (age < 20))
lb_birth_pre_20_risk <- relative_risk(birth_weights, "under_20", TRUE)
# --- Endometrial Cancer ---
#Load in data
data(bdendo)
table(r243b)
# Make well formatted table
names = c("Risk Given Smoking", "Risk Given Hypertension", "Risk given no prenatal care visits", "Risk Given birth before 20")
data = c(lb_smoking_risk, lb_hypertension_risk, lb_noprenatal_risk, lb_birth_pre_20_risk)
a = data.frame(c(names, data))
View(a)
a = data.frame(names, data)
View(a)
table(a)
table(names, data)
table(names, data)
# Make well formatted table
names = c("Risk Given Smoking", "Risk Given Hypertension", "Risk given no prenatal care visits", "Risk Given birth before 20")
data = c(lb_smoking_risk, lb_hypertension_risk, lb_noprenatal_risk, lb_birth_pre_20_risk)
table(names, data)
source('E:/School/INFO478/a3-taingmat/analysis.R')
source('E:/School/INFO478/a3-taingmat/analysis.R')
source('~/.active-rstudio-document', echo=TRUE)
plot(BXG_lat)
plot(BCG_lat)
plot(BCG_year)
#Plotting Relationshop with latitude + year
BCG_lat <- ggplot(BCG, aes(x = Latitude, y = odds_ratio)) +
geom_line() +
ggtitle("Latitude vs BCG Odds Ratio") +
xlab("Latitude") +
ylab("odds ratio")
BCG_year <- ggplot(BCG, aes(x = Year, y = odds_ratio)) +
geom_line() +
ggtitle("Year vs BCG Odds Ratio") +
xlab("Year") +
ylab("odds ratio")
BCG_year <- ggplot(BCG, aes(x = Year, y = odds_ratio)) +
geom_line() +
ggtitle("Year vs BCG Odds Ratio") +
xlab("Year") +
ylab("odds ratio")
#Plotting Relationshop with latitude + year
BCG_lat <- ggplot(BCG, aes(x = Latitude, y = odds_ratio)) +
geom_line() +
ggtitle("Latitude vs BCG Odds Ratio") +
xlab("Latitude") +
ylab("odds ratio")
# Make well formatted table
names = c("Risk Given Smoking", "Risk Given Hypertension", "Risk given no prenatal care visits", "Risk Given birth before 20")
data = c(lb_smoking_risk, lb_hypertension_risk, lb_noprenatal_risk, lb_birth_pre_20_risk)
a = data.frame(names, data)
View(a)
table = data.frame(names, data)
library("knitr")
kable(table)
source('E:/School/INFO478/a3-taingmat/analysis.R')
source('E:/School/INFO478/a3-taingmat/analysis.R')
odds <- epitab(y = bdendo$hyp, x = bdendo$d, method = "oddsratio", verbose = "FALSE")
View(odds)
View(bdendo)
hyp_odds <- epitab(y = bdendo$hyp, x = bdendo$d, method = "oddsratio", verbose = "FALSE")
gallBladder_odds <- epitab(y = bdendo$gall, x = bdendo$d, method = "oddsratio", verbose = "FALSE")
obesity_odds <- epitab(y = bdendo$ob, x = bdendo$d, method = "oddsratio", verbose = "FALSE")
View(obesity_odds)
hyp_odds
hyp_odds$tab
hyp_odds$tab["oddsratio"]
hyp_odds$tab[oddsratio]
hyp_odds$tab %>% select(oddsratio) %>% filter(Predictor == 1)
hyp_odds$tab %>% select("oddsratio") %>% filter(Predictor == 1)
hyp_odds$tab %>% select("oddsratio")
hyp_odds$tab %>% select("oddsratio")
hyp_odds$tab %>% select("oddsratio") %>% filter(Predictor == 1)
hyp_odds$tab
hyp_odds$tab[1]
hyp_odds$tab[5]
hyp_odds$tab[1]
hyp_odds$tab[2]
hyp_odds$tab[3]
data.frame(hyp_odds$tab)
data.frame(hyp_odds$tab) %>% select(oddsratio)
data.frame(hyp_odds$tab) %>% select("oddsratio")
data.frame(hyp_odds$tab)
data.frame(hyp_odds$tab) %>% filter(Priority > 1)
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
fig <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo')
fig <- fig %>% add_trace(y = ~LA_Zoo, name = 'LA Zoo')
library(dplyr)
library(ggplot2)
<<<<<<< HEAD
library(plotly)
library(tidyr)
library(stringr)
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
fig <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo')
fig <- fig %>% add_trace(y = ~LA_Zoo, name = 'LA Zoo')
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
fig
setwd("~/../Desktop/INFO478/info478-project/eda")
water <- read.csv("./water2.csv")
gbd <- read.csv("./IHME-GBD_2017_DATA-1bf0d925-1.csv")
#Find countries with the lowest levels of clean water, the bottom 10%
poor_water <- water %>%
select(location = Geographic.Area,
limited_dwater = X2017_Proportion.of.population.using.limited.drinking.water.services,
unimproved_dwater = X2017_Proportion.of.population.using.unimproved.drinking.water.sources
) %>%
filter(!is.na(limited_dwater), !is.na(unimproved_dwater))
worst_water <- poor_water %>%
top_n(floor(nrow(poor_water) * .10))
#Filter
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)",
metric == "Rate",
cause != "All causes") %>%
select(location, cause, metric, val, upper, lower) %>%
filter(location %in% worst_water$location) %>%
group_by(location) %>%
top_n(n = 10, wt = val)
cause_count = gbd_dalys %>%
group_by(cause) %>%
tally()
#order the data
cause_count = cause_count[order(cause_count$n),]
#Create a historgram that counts that diseases prevalent in each country
common_causes <- ggplot(cause_count, aes(x = reorder(cause, n), y = n)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "Cause of Health Burden", y = "Number of Countries with cause") +
ggtitle(label = "Causes & Unimproved Drinking Water")
# By country / grouped
countries <- unique(gbd_dalys$location)
percent_contr <- data.frame()
for (i in countries) {
# concerned_causes = c("Neonatal disorders", "Maternal and neonatal disorders", "Malaria")
country_gbd_dalys <- gbd %>% filter(location == i)
total_dalys = sum(country_gbd_dalys$val)
country_gbd_dalys <- country_gbd_dalys %>%
mutate(percentage_contribution = val / total_dalys)
percent_contr = rbind(percent_contr, country_gbd_dalys)
}
concerned_causes <- cause_count$cause
water_damage <- filter(percent_contr, cause %in% concerned_causes) %>%
select(location, cause, percentage_contribution)
# Plot which shows Daly percentage contribution by natal related diseases
natal_causes <- ggplot(water_damage, aes(fill = cause, x = location, y = percentage_contribution)) +
geom_bar(position = "stack", stat="identity") +
coord_flip() +
theme(legend.position="none")
temp_set <- water_damage %>% filter(cause == "Malaria", location %in% countries)
temp_set2 <- water_damage %>% filter(cause == "Neonatal disorders", location %in% countries)
fig <- plot_ly(temp_set, x=~location, y=~percentage_contribution, type ="bar", name = "Malaria") %>%
add_trace(temp_set2, x=~location, y=~percentage_contribution, name = "Neonatal")%>%
layout(yaxis = countries, barmode = "stack")
water_damage_pivot <- pivot_wider(water_damage, names_from = cause, values_from = percentage_contribution)
names(water_damage_pivot)<-str_replace_all(names(water_damage_pivot), c(" " = "." , "," = "" ))
fig <- plot_ly(water_damage_pivot, x = ~location, y = ~Malaria, type = 'bar', name = 'Malaria')
fig <- fig %>% add_trace(y = ~Communicable.maternal.neonatal.and.nutritional.diseases, name = 'Neonatal Disorders')
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
fig <- plot_ly(water_damage_pivot, x = ~location, y = ~Malaria, type = 'bar', name = 'Malaria')
fig <- fig %>% add_trace(y = ~Communicable.maternal.neonatal.and.nutritional.diseases, name = 'Neonatal Disorders')
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
concerned_causes <- str_replace_all(concerned_causes, c(" " = "." , "," = "" ))
for (i in concerned_causes) {
fig <- fig %>% add_trace(y = i, name = i)
}
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
fig
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
for (i in concerned_causes) {
fig <- fig %>% add_trace(y = water_damage_pivot[[i]], name = i)
}
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
a = "Malaria"
water_damage_pivot[[a]]
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
fig <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo')
fig <- fig %>% add_trace(y = ~LA_Zoo, name = 'LA Zoo')
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
concerned_causes
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
for (i in concerned_cause) {
fig <- fig %>% add_trace(y = water_damage_pivot[[i]], name = i)
}
concerned_cause = c("Communicable.maternal.neonatal.and.nutritional.diseases")
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
for (i in concerned_cause) {
fig <- fig %>% add_trace(y = water_damage_pivot[[i]], name = i)
}
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
fig <- fig %>% add_trace(y = water_damage_pivot[["Communicable.maternal.neonatal.and.nutritional.diseases"]], name = i)
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
concerned_cause = c("Communicable.maternal.neonatal.and.nutritional.diseases")
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
i = "Communicable.maternal.neonatal.and.nutritional.diseases"
fig <- fig %>% add_trace(y = water_damage_pivot[[i]], name = i)
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
i
fig
water_damage_pivot[[i]]
water_damage_pivot[["Communicable.maternal.neonatal.and.nutritional.diseases"]]
concerned_cause = c("Communicable.maternal.neonatal.and.nutritional.diseases")
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
i = "Communicable.maternal.neonatal.and.nutritional.diseases"
temp =  water_damage_pivot[[i]]
fig <- fig %>% add_trace(y = temp, name = i)
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
for (i in concerned_cause) {
temp =  water_damage_pivot[[i]]
fig <- fig %>% add_trace(y = temp, name = i)
}
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
concerned_cause = c("Communicable.maternal.neonatal.and.nutritional.diseases")
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
for (i in concerned_cause) {
temp =  water_damage_pivot[[i]]
fig <- fig %>% add_trace(y = temp, name = i)
}
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
for (i in concerned_causes) {
temp =  water_damage_pivot[[i]]
fig <- fig %>% add_trace(y = temp, name = i)
}
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
concerned_cause = c("Communicable.maternal.neonatal.and.nutritional.diseases")
fig <- plot_ly(water_damage_pivot, x = ~location, y = water_damage_pivot$Malaria, type = 'bar', name = 'Malaria')
for (i in concerned_causes) {
temp =  water_damage_pivot[[i]]
fig <- fig %>% add_trace(y = temp, name = i)
}
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
fig
source("causes.R")
shiny::runApp()
source('C:/Users/Matth/Desktop/INFO478/info478-project/eda/causes.R')
runApp()
=======
library("gdata")
library(tidyverse)
library(maps)
library("rworldmap")
library("classInt")
water_data <- read.csv("water2.csv", stringsAsFactors = FALSE)
water_data_map <- data.frame(water_data$Geographic.Area, water_data$X2017_Proportion.of.population.using.unimproved.drinking.water.sources)
water_data_map <-water_data_map %>%
rename(
Country = water_data.Geographic.Area,
`Proportion Using Unimproved Sources of Drinking Water` = water_data.X2017_Proportion.of.population.using.unimproved.drinking.water.sources
)
water_data_map <- remove_missing(water_data_map)
water_data_map_joined <- joinCountryData2Map(water_data_map
, joinCode = "NAME"
, nameJoinColumn = "Country")
classInt <- classInt::classIntervals( water_data_map_joined[["Proportion Using Unimproved Sources of Drinking Water"]], n=5, style="jenks")
catMethod = classInt[["brks"]]
colourPalette <- RColorBrewer::brewer.pal(5,'BuGn')
mapParams <- mapCountryData( water_data_map_joined
, nameColumnToPlot="Proportion Using Unimproved Sources of Drinking Water"
, addLegend=FALSE
, catMethod = catMethod
, colourPalette = colourPalette )
do.call( addMapLegend , c( mapParams
, legendLabels="all"
, legendWidth=0.5
, legendIntervals="data" , legendMar = 2 ) )
shiny::runApp()
>>>>>>> 290c4dd56f9e5bb571157a46860bcd84e02c46de
