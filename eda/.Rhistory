mutate(maeduc = as.numeric(maeduc)),
aes(x = realrinc, y = maeduc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ maeduc, data = gss_all))
ggplot(gss_all %>%
mutate(paeduc = as.numeric(paeduc)),
aes(x = realrinc, y = paeduc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ paeduc, data = gss_all))
ggplot(gss_all %>%
mutate(paeduc = as.numeric(paeduc)),
aes(x = realrinc, y = paeduc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ paeduc, data = gss_all))
gss_all <- gss_all %>%
mutate(rinc_z = (realrinc - mean(realrinc, na.rm = T))/sd(realrinc, na.rm = T),
reduc_z = (educ - mean(educ, na.rm = T))/sd(educ, na.rm = T),
paeduc_z = (paeduc - mean(paeduc, na.rm = T))/sd(paeduc, na.rm = T))
library(sjPlot)
tab_model(lm(realrinc ~ educ, data = gss_all %>% filter(!is.na(paeduc_z))),
lm(realrinc ~ reduc_z, data = gss_all %>% filter(!is.na(paeduc_z))),
lm(realrinc ~ reduc_z + paeduc_z, data = gss_all),
lm(realrinc ~ reduc_z + paeduc_z + year, data = gss_all),
lm(educ ~ paeduc, data = gss_all),
p.style = "a", show.ci = F, show.se = T)
install.packages("sjPlot")
library(sjPlot)
gss_all <- gss_all %>%
mutate(rinc_z = (realrinc - mean(realrinc, na.rm = T))/sd(realrinc, na.rm = T),
reduc_z = (educ - mean(educ, na.rm = T))/sd(educ, na.rm = T),
paeduc_z = (paeduc - mean(paeduc, na.rm = T))/sd(paeduc, na.rm = T))
library(tidyverse)
library(gssr)
data(gss_all)
data(gss_doc)
gss_all <- gss_all %>%
mutate(rinc_z = (realrinc - mean(realrinc, na.rm = T))/sd(realrinc, na.rm = T),
reduc_z = (educ - mean(educ, na.rm = T))/sd(educ, na.rm = T),
paeduc_z = (paeduc - mean(paeduc, na.rm = T))/sd(paeduc, na.rm = T))
library(sjPlot)
tab_model(lm(realrinc ~ educ, data = gss_all %>% filter(!is.na(paeduc_z))),
lm(realrinc ~ reduc_z, data = gss_all %>% filter(!is.na(paeduc_z))),
lm(realrinc ~ reduc_z + paeduc_z, data = gss_all),
lm(realrinc ~ reduc_z + paeduc_z + year, data = gss_all),
lm(educ ~ paeduc, data = gss_all),
p.style = "a", show.ci = F, show.se = T)
ggplot(gss_all %>%
mutate(educ = as.numeric(educ)),
aes(x = educ, y = sei10)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
labs(x = "Years of R's Education", y = "R's SEI", title = "Respondent Education and SEI")
summary(lm(sei10 ~ educ, data = gss_all %>%
mutate(educ = as.numeric(educ))))
ggplot(gss_all %>%
mutate(educ = as.numeric(educ)),
aes(y = realrinc, x = educ)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7)
summary(lm(realrinc ~ educ, data = gss_all %>%
mutate(educ = as.numeric(educ))))
ggplot(gss_all %>%
mutate(educ = as.numeric(educ)),
aes(y = realrinc, x = educ)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10()+
geom_smooth(method = "lm", color = "black", size = 0.7)
summary(lm(realrinc ~ educ, data = gss_all %>%
mutate(educ = as.numeric(educ))))
ggplot(gss_all %>%
mutate(educ = as.numeric(educ)),
aes(y = realrinc, x = educ)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10()+
labs(y = "log of real income") +
geom_smooth(method = "lm", color = "black", size = 0.7)
summary(lm(realrinc ~ educ, data = gss_all %>%
mutate(educ = as.numeric(educ))))
# relationship between total money contribute to educ and ses
ggplot(gss_all %>%
mutate(toteduc = as.numeric(toteduc)),
aes(x = toteduc, y = sei10)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(toteduc ~ sei10, data = gss_all))
# relationship between total money contribute to educ and income
ggplot(gss_all %>%
mutate(toteduc = as.numeric(toteduc)),
aes(x = realrinc, y = toteduc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ toteduc, data = gss_all))
ggplot(gss_all %>%
mutate(paeduc = as.numeric(paeduc)),
aes(y = realrinc, x = paeduc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7)
summary(lm(realrinc ~ paeduc, data = gss_all %>%
mutate(paeduc = as.numeric(paeduc))))
ggplot(gss_all %>%
mutate(paeduc = as.numeric(paeduc)),
aes(y = realrinc, x = paeduc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10()+
geom_smooth(method = "lm", color = "black", size = 0.7)
summary(lm(realrinc ~ paeduc, data = gss_all %>%
mutate(paeduc = as.numeric(paeduc))))
ggplot(gss_all %>%
mutate(maeduc = as.numeric(maeduc)),
aes(x = realrinc, y = maeduc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ maeduc, data = gss_all))
ggplot(gss_all %>%
mutate(maeduc = as.numeric(maeduc)),
aes(x = realrinc, y = maeduc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10()+
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ maeduc, data = gss_all))
ggplot(gss_all %>%
mutate(maeduc = as.numeric(maeduc)),
aes(x = maeduc, y = realrinc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10()+
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ maeduc, data = gss_all))
ggplot(gss_all %>%
mutate(maeduc = as.numeric(maeduc)),
aes(x = maeduc, y = realrinc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10()+
geom_smooth(method = "lm", color = "black", size = 0.7)
summary(lm(realrinc ~ maeduc, data = gss_all))
ggplot(gss_all %>%
mutate(toteduc = as.numeric(toteduc),
paeduc = paeduc),
aes(x = paeduc, y = toteduc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7)
summary(lm(paeduc ~ toteduc, data = gss_all))
# you'll need to install this package before using it below
library(sjPlot)
# this eliminates the NAs that are in any of the variables we use in the table below
gss_2 <- gss_all %>%
filter(!is.na(educ),
!is.na(paeduc),
!is.na(pasei10))
# here's the table (using sjPlot)
tab_model(lm(realrinc ~ educ, data = gss_2),
lm(realrinc ~ paeduc, data = gss_2),
lm(realrinc ~ educ + paeduc, data = gss_2),
lm(realinc ~ educ + pasei10, data = gss_2),
show.ci = F, show.se = T, p.style = "a")
tab_model(lm(realrinc ~ educ, data = gss_2),
lm(realrinc ~ paeduc, data = gss_2),
lm(realrinc ~ educ + paeduc, data = gss_2),
lm(realinc ~ educ + pasei10, data = gss_2),
show.ci = F, show.se = T)
ggplot(gss_all %>%
mutate(sei10 = as.numeric(sei10)),
aes(x = realrinc, y = sei10)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ sei10, data = gss_all))
ggplot(gss_all %>%
mutate(sei10 = as.numeric(sei10)),
aes(x = sei10, y = realrinc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ sei10, data = gss_all))
ggplot(gss_all %>%
mutate(sei10 = as.numeric(sei10)),
aes(x = sei10, y = realrinc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
geom_smooth(method = "lm", color = "black", size = 0.7)
summary(lm(realrinc ~ sei10, data = gss_all))
ggplot(gss_all %>%
mutate(sei10 = as.numeric(sei10)),
aes(x = sei10, y = realrinc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10() +
geom_smooth(method = "lm", color = "black", size = 0.7)
summary(lm(realrinc ~ sei10, data = gss_all))
# relationship between father's ses and income
ggplot(gss_all,
aes(y = realrinc, x = pasei10)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10() +
geom_smooth(method = "lm", color = "black", size = 0.7, alpha = 0)
summary(lm(pasei10 ~ realrinc, data = gss_all))
ggplot(gss_all %>%
mutate(masei10 = as.numeric(masei10)),
aes(x = realrinc, y = masei10)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ masei10, data = gss_all))
ggplot(gss_all %>%
mutate(masei10 = as.numeric(masei10)),
aes(x = masei10, y = realrinc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10() +
geom_smooth(method = "lm", color = "black", size = 0.7) +
coord_cartesian(ylim = c(10, 100))
summary(lm(realrinc ~ masei10, data = gss_all))
ggplot(gss_all %>%
mutate(masei10 = as.numeric(masei10)),
aes(x = masei10, y = realrinc)) +
geom_jitter(color = "gray70", alpha = 0.2) +
theme_minimal() +
scale_y_log10() +
geom_smooth(method = "lm", color = "black", size = 0.7)
summary(lm(realrinc ~ masei10, data = gss_all))
setwd("~/Documents/GitHub/info478-project")
water <- read.csv("./water2.csv")
View(water)
water <- read.csv("./water2.csv")
View(water)
gbd <- read.csv("./IHME-GBD_2017_DATA-9836e5da-2.csv")
View(water)
View(gbd)
setwd("~/Documents/GitHub/info478-project/eda")
water <- read.csv("./water2.csv")
IHME-GBD_2017_DATA-9836e5da-2
gbd <- read.csv("./IHME-GBD_2017_DATA-9836e5da-2.csv")
water <- read.csv("./water2.csv")
IHME-GBD_2017_DATA-9836e5da-2
gbd <- read.csv("./IHME-GBD_2017_DATA-9836e5da-2.csv")
View(water)
View(gbd)
2016_gdb <- gdb %>%
select(year == "2016")
2016_gdb <- gdb %>%
filter(year == "2016")
2016_gbd <- gbd %>%
filter(year == "2016")
2016_gbd <- gbd %>%
select(year == "2016")
library(tidyr)
library(dplyr)
2016_gbd <- gbd %>%
select(year == "2016")
2016_gbd <- gbd %>%
filter(year == "2016")
View(gbd)
2016_gbd <- gbd %>%
filter(year == "2017")
2016_gbd <- gbd %>%
filter(year == "2016") %>%
filter(measure == "	DALYs (Disability-Adjusted Life Years)")
2016_gbd <- gbd %>%
group_by(measure)
filter(year == "2016")
View(water)
2016_gbd <- gbd %>%
filter(measure == "	DALYs (Disability-Adjusted Life Years)")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(stringr)
library(scales)
2016_gbd <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)")
gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)")
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)")
View(gbd_dalys)
View(gbd_dalys)
gbd_ylls <- gbd %>%
filter(measure == "YLLs (Years of Life Lost)")
gdb_ylds <- gdb %>%
filter(measure == "YLDs (Years Lived with Disability)")
View(gbd_ylls)
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)") %>%
filter(metric == "Percent")
View(gbd_dalys)
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)") %>%
filter(metric == "Percent") %>%
filter(cause == "All causes")
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)") %>%
filter(metric == "Percent")
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)") %>%
filter(metric == "Rate") %>%
filter(cause == "All causes")
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)") %>%
filter(metric == "Rate") %>%
filter(cause == "All causes") %>%
arrange(-value)
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)") %>%
filter(metric == "Rate") %>%
filter(cause == "All causes") %>%
arrange(-val)
gbd_ylls <- gbd %>%
filter(measure == "YLLs (Years of Life Lost)") %>%
filter(metric == "Rate") %>%
filter(cause == "All causes") %>%
arrange(-val)
View(gbd_ylls)
compare_water <- water %>%
select(Geographic.Area, Sex,
X2017_Proportion.of.population.using.basic.drinking.water.services,
X2017_Proportion.of.population.using.limited.drinking.water.services,
X2016_Proportion.of.health.care.facilities.with.basic.water.services,
X2016_Proportion.of.health.care.facilities.with.limited.water.services)
View(compare_water)
View(water)
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)") %>%
filter(metric == "Rate") %>%
filter(cause == "All causes") %>%
arrange(-val) %>%
top_n(10)
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)") %>%
filter(metric == "Rate") %>%
filter(cause == "All causes") %>%
arrange(-val)
gbd_dalys <- gbd %>%
filter(measure == "DALYs (Disability-Adjusted Life Years)") %>%
filter(metric == "Rate") %>%
filter(cause == "All causes") %>%
arrange(-val) %>%
top_n(10)
dalys_bar = ggplot(gbd_dalys, aes(x = location, y = val))+
geom_bar(stat = "identity") +
labs(x = "Top 10 Countries",
y = "Rate of DALYs",
title = "Top 10 Countries rate of DALYs")+
coord_flip()
dalys_bar
compare <- merge(gbd_dalys,gbd_ylls,by="location")
View(compare)
compare_water <- water %>%
select(Geographic.Area, Sex,
X2017_Proportion.of.population.using.basic.drinking.water.services,
X2017_Proportion.of.population.using.limited.drinking.water.services)
compare_water <- water %>%
select(Geographic.Area, Sex,
X2017_Proportion.of.population.using.basic.drinking.water.services,
X2017_Proportion.of.population.using.limited.drinking.water.services, na.omit())
compare <- left_join(gbd_dalys,gbd_ylls,by="location")
View(gbd_dalys)
compare_water <- water %>%
select(Geographic.Area, Sex,
X2017_Proportion.of.population.using.basic.drinking.water.services,
X2017_Proportion.of.population.using.limited.drinking.water.services) %>%
rename(location = Geographic.Area)
new_data <- left_join(gbd_dalys, compare_water, by = "location")
View(water)
View(new_data)
dalys_water <- na.omit(new_data)
View(dalys_water)
dalys_water <- na.omit(new_data, c=("X2017_Proportion.of.population.using.limited.drinking.water.services"))
View(dalys_water)
compare_water <- water %>%
select(Geographic.Area, Sex,
X2017_Proportion.of.population.using.basic.drinking.water.services,
X2017_Proportion.of.population.using.limited.drinking.water.services,
X2016_Proportion.of.health.care.facilities.with.limited.water.services) %>%
rename(location = Geographic.Area)
new_data <- left_join(gbd_dalys, compare_water, by = "location")
View(water)
compare_water <- water %>%
select(Geographic.Area, Sex,
X2017_Proportion.of.population.using.limited.drinking.water.services,
X2017_Proportion.of.population.using.unimproved.drinking.water.sources
) %>%
rename(location = Geographic.Area)
new_data <- left_join(gbd_dalys, compare_water, by = "location")
compare_water <- water %>%
select(Geographic.Area, Sex,
X2017_Proportion.of.population.using.limited.drinking.water.services,
X2017_Proportion.of.population.using.unimproved.drinking.water.sources,
X2017_Proportion.of.population.using.safely.managed.drinking.water.services,
X2017_Proportion.of.population.using.improved.drinking.water.sources.free.of.faecal.and.priority.chemical.contamination
) %>%
rename(location = Geographic.Area)
new_data <- left_join(gbd_dalys, compare_water, by = "location")
dalys_waterquality = ggplot(new_data, aes(x = val, y = X2017_Proportion.of.population.using.limited.drinking.water.services))+
geom_point(stat = "identity") +
labs(x = "Top 10 Countries",
y = "Rate of DALYs",
title = "Top 10 Countries rate of DALYs")
dalys_waterquality
dalys_waterquality = ggplot(new_data, aes(x = val, y = X2017_Proportion.of.population.using.limited.drinking.water.services))+
geom_point(stat = "identity") +
geom_text(label=rownames(location))+
labs(x = "Top 10 Countries",
y = "Rate of DALYs",
title = "Top 10 Countries rate of DALYs")
dalys_waterquality
dalys_waterquality = ggplot(new_data, aes(x = val, y = X2017_Proportion.of.population.using.limited.drinking.water.services))+
geom_point(stat = "identity") +
labs(x = "Top 10 Countries",
y = "Rate of DALYs",
title = "Top 10 Countries rate of DALYs")
dalys_waterquality
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
completeFun(new_data, "X2017_Proportion.of.population.using.limited.drinking.water.services")
top_dalys <- completeFun(new_data, "X2017_Proportion.of.population.using.limited.drinking.water.services")
View(top_dalys)
dalys_waterquality = ggplot(top_dalys, aes(x = val, y = X2017_Proportion.of.population.using.limited.drinking.water.services))+
geom_point(stat = "identity") +
geom_text(label=rownames(location))+
labs(x = "Top 10 Countries",
y = "Rate of DALYs",
title = "Top 10 Countries rate of DALYs")
dalys_waterquality
compare_water <- water %>%
select(Geographic.Area, Sex,
X2017_Proportion.of.population.using.limited.drinking.water.services,
X2017_Proportion.of.population.using.unimproved.drinking.water.sources
) %>%
rename(location = Geographic.Area)
new_data <- left_join(gbd_dalys, compare_water, by = "location")
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
top_dalys <- completeFun(new_data, "X2017_Proportion.of.population.using.limited.drinking.water.services")
dalys_waterquality = ggplot(top_dalys, aes(x = val, y = X2017_Proportion.of.population.using.limited.drinking.water.services))+
geom_point(stat = "identity") +
geom_text(label=rownames(location))+
labs(x = "Top 10 Countries",
y = "Rate of DALYs",
title = "Top 10 Countries rate of DALYs")
dalys_waterquality
rlang::last_error()
dalys_limitedwater = ggplot(top_dalys, aes(x = val, y = X2017_Proportion.of.population.using.limited.drinking.water.services))+
geom_point() +
geom_text(label=rownames(location))+
labs(x = "Top 10 Countries",
y = "Rate of DALYs",
title = "Top 10 Countries rate of DALYs")
dalys_limitedwater
dalys_limitedwater = ggplot(top_dalys, aes(x = val, y = X2017_Proportion.of.population.using.limited.drinking.water.services))+
geom_point() +
geom_text(label=rownames(location))+
labs(x = "DALYs Rate",
y = "Prop of pop using limited drinkg water",
title = "DALYs rate vs prop of limited drinking water")
dalys_unimproved = ggplot(top_dalys, aes(x = val, y = X2017_Proportion.of.population.using.unimproved.drinking.water.sources))+
geom_point() +
geom_text(label=rownames(location))+
labs(x = "DALYs Rate",
y = "Prop of pop using unimproved drinkg water",
title = "DALYs rate vs prop of unimproved drinking water")
dalys_unimproved = ggplot(top_dalys, aes(x = val, y = X2017_Proportion.of.population.using.unimproved.drinking.water.sources))+
geom_point() +
geom_text(aes(label=location), size = 4)+
labs(x = "DALYs Rate of top 8 countries",
y = "Prop of pop using unimproved drinkg water",
title = "DALYs rate vs prop of unimproved drinking water")
dalys_unimproved
dalys_limitedwater = ggplot(top_dalys, aes(x = val, y = X2017_Proportion.of.population.using.limited.drinking.water.services))+
geom_point() +
geom_text(aes(label=location), size = 4)+
labs(x = "DALYs Rate of top 8 countries",
y = "Prop of pop using limited drinkg water",
title = "DALYs rate vs prop of limited drinking water")
knitr::opts_chunk$set(echo = TRUE)
plot(dalys_limitedwater)
plot(dalys_unimproved)
View(gbd)
